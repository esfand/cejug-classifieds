<?xml version="1.0" encoding="utf-8" ?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://cejug-classifieds.dev.java.net/metadata/common"
	xmlns:common="http://cejug-classifieds.dev.java.net/metadata/common"
	elementFormDefault="qualified" attributeFormDefault="qualified"
	xmlns:mime="http://www.w3.org/2005/05/xmlmim" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
	xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
	jaxb:extensionBindingPrefixes="xjc" jaxb:version="2.1">
	<xsd:annotation>
		<xsd:documentation>
			Shared meta-data, like fault and response status.
		</xsd:documentation>
	</xsd:annotation>
	<xsd:complexType name="AbstractMessageElement"
		abstract="true">
		<xsd:sequence minOccurs="1">
			<xsd:element name="entity.id" type="xsd:long" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ServiceFault">
		<xsd:annotation>
			<xsd:documentation>
				The general failure for Cejug-Classifieds
				operations.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="code" type="xsd:int" />
				<xsd:element name="headline" type="xsd:string" />
				<xsd:element name="details" type="xsd:string" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="BundleRequest">
		<xsd:sequence minOccurs="1" maxOccurs="unbounded">
			<xsd:element type="xsd:int" name="skip" nillable="true" />
			<xsd:element type="xsd:int" name="amount" nillable="true" />
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="DomainBundleRequest" type="common:BundleRequest" />
	<xsd:element name="CategoryBundleRequest" type="common:BundleRequest" />
	<xsd:element name="CustomerBundleRequest" type="common:BundleRequest" />
	<xsd:element name="AdvertisementTypeBundleRequest" type="common:BundleRequest" />
	<xsd:element name="PrimaryKey">
		<xsd:annotation>
			<xsd:documentation>
				An integer used to delete records in the database.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:long">
				<xsd:minInclusive value="0" />
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ServiceStatus">
		<xsd:annotation>
			<xsd:documentation>
				Used to return status of the operation request in
				the
				operations that have no return type. If the operation
				has a return
				type, it should use it instead of the
				status message - a failure is
				the sign of problems, in
				this case. It contains a timestamp to store
				the date
				time of the finish of the operation.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence minOccurs="1">
				<xsd:element ref="common:StatusCode" />
				<xsd:element name="description" type="xsd:string" />
				<xsd:element name="timestamp" type="xsd:dateTime" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ServiceStatusBundle">
		<xsd:complexType>
			<xsd:sequence minOccurs="1" maxOccurs="unbounded">
				<xsd:element ref="common:ServiceStatus" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="StatusCode" type="common:ClassifiedsStatusCode" />
	<xsd:simpleType name="ClassifiedsStatusCode">
		<xsd:restriction base="xsd:int">
			<xsd:enumeration value="200" id="OK" />
			<xsd:enumeration value="500" id="NOT_OK" />
			<xsd:enumeration value="501" id="NOT_IMPLEMENTED" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="Domain">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="common:AbstractMessageElement">
					<xsd:sequence>
						<xsd:element name="shared.quota" type="xsd:boolean" />
						<xsd:element name="uri" type="xsd:string" />
						<xsd:element name="brand" type="xsd:string" />
						<xsd:element name="timezone" type="xsd:string"
							default="Fortaleza/Ceara" />
						<xsd:element ref="common:AdvCategory" minOccurs="1"
							maxOccurs="unbounded" />
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DomainCollection">
		<xsd:complexType>
			<xsd:sequence minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="common:Domain" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvertisementType">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="common:AbstractMessageElement">
					<xsd:sequence>
						<xsd:element name="name" type="xsd:string" />
						<xsd:element name="description" type="xsd:string" />
						<xsd:element name="max.attachment.size" type="xsd:long" />
						<xsd:element name="max.text.length" type="xsd:long" />
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvertisementTypeCollection">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation xml:lang="en">
					This is a test of
					documentation.. to be adopted in
					all elements.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:sequence minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="common:AdvertisementType" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Quota">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="common:AbstractMessageElement">
					<xsd:sequence>
						<xsd:element name="advertisement.type.id" type="xsd:long" />
						<xsd:element name="amount" type="xsd:int" />
						<xsd:element name="domain.id" type="xsd:long" />
						<xsd:element name="customer.login" type="xsd:string"
							nillable="true" />
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Voucher">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="pin" type="xsd:string" />
				<xsd:element name="customer.domain" type="xsd:string" />
				<xsd:element name="customer.login" type="xsd:string" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CategoryCollection">
		<xsd:complexType>
			<xsd:sequence minOccurs="1" maxOccurs="unbounded">
				<xsd:element ref="common:AdvCategory" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="AdvertisementCategory">
		<xsd:complexContent>
			<xsd:extension base="common:AbstractMessageElement">
				<xsd:sequence>
					<xsd:element name="name" type="xsd:NMTOKEN" />
					<xsd:element name="description" type="xsd:string" />
					<xsd:element name="available" type="xsd:int" />
					<xsd:element ref="common:AdvSubCategory" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="AdvCategory" type="common:AdvertisementCategory" />
	<xsd:element name="AdvSubCategory" type="common:AdvertisementCategory" />
	<xsd:element name="Customer">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="common:AbstractMessageElement">
					<xsd:sequence>
						<xsd:element name="login" type="xsd:string" />
						<xsd:element name="domain.id" type="xsd:long" />
						<xsd:element name="email" type="xsd:long" />
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CustomerCollection">
		<xsd:complexType>
			<xsd:sequence minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="common:Customer" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- CUSTOMER PARAMETERS -->
	<xsd:element name="CreateCustomerParam">
		<xsd:complexType>
			<xsd:sequence minOccurs="1" maxOccurs="1">
				<xsd:element ref="common:Customer" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="UpdateCustomerParam">
		<xsd:complexType>
			<xsd:sequence minOccurs="1" maxOccurs="1">
				<xsd:element ref="common:AdvCategory" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DeleteCustomerParam">
		<xsd:complexType>
			<xsd:sequence minOccurs="1" maxOccurs="1">
				<xsd:element ref="common:PrimaryKey" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ReadCustomerBundleParam">
		<xsd:complexType>
			<xsd:sequence minOccurs="1" maxOccurs="1">
				<xsd:element ref="common:CustomerBundleRequest" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="localeType">
		<xsd:annotation>
			<xsd:documentation>
				The localeType defines valid locale defined
				by
				ISO-639-1 and ISO-3166.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[a-z]{2}(_|-)?([\p{L}\-\p{Nd}]{2})?" />
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>